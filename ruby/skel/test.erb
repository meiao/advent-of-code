require 'minitest/autorun'
require_relative '<%= @file_data.file_name %>'

# Tests for <%= @file_data.year %> day <%= @file_data.day %>
class Test<%= @file_data.year %>_<%= @file_data.day %> < Minitest::Test
  def test_part1_small
    file_name = File.join(File.dirname(__FILE__), './input.small')
    input = File.open(file_name).readlines.map(&:strip)
    solver = Solver.new
    assert_equal(1, solver.solve(input))
  end

  #def test_part1_large
  #  file_name = File.join(File.dirname(__FILE__), './input')
  #  input = File.open(file_name).readlines.map(&:strip)
  #  solver = Solver.new
  #  assert_equal(1, solver.solve(input))
  #end

  #def test_part2_small
  #  file_name = File.join(File.dirname(__FILE__), './input.small')
  #  input = File.open(file_name).readlines.map(&:strip)
  #  solver = Solver.new
  #  assert_equal(1, solver.solve2(input))
  #end

  #def test_part2_large
  #  file_name = File.join(File.dirname(__FILE__), './input')
  #  input = File.open(file_name).readlines.map(&:strip)
  #  solver = Solver.new
  #  assert_equal(1, solver.solve2(input))
  #end
end
